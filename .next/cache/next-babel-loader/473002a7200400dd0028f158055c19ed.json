{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/hluong/Desktop/experiment_source/nextjs-portfolio/pages/_app.js\";\nimport React from 'react';\nimport App, { Container } from 'next/app';\nimport Head from 'next/head';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Transition from '../components/transition';\nimport Header from \"../components/layout/header\";\nimport Footer from \"../components/layout/footer.copy\";\nimport { GlobalStyle } from \"../src/global-styles\";\n\nvar MyApp =\n/*#__PURE__*/\nfunction (_App) {\n  _inherits(MyApp, _App);\n\n  function MyApp() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MyApp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MyApp)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      triggerTransition: true,\n      isNavOpened: true,\n      navPosition: \"fixed\",\n      overflowClassname: \"nav-opened\",\n      menuColor: \"action\",\n      transitionTimeout: 200000\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setMenuColor\", function (color) {\n      _this.setState({\n        menuColor: color\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleNav\", function () {\n      var _this$state = _this.state,\n          isNavOpened = _this$state.isNavOpened,\n          overflowClassname = _this$state.overflowClassname;\n      !isNavOpened ? document.body.classList.add(overflowClassname) : document.body.classList.remove(overflowClassname);\n\n      _this.setState({\n        isNavOpened: !isNavOpened\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(MyApp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var jssStyles = document.querySelector('#jss-server-side');\n\n      if (jssStyles) {\n        jssStyles.parentNode.removeChild(jssStyles);\n      }\n\n      var _this$state2 = this.state,\n          triggerTransition = _this$state2.triggerTransition,\n          overflowClassname = _this$state2.overflowClassname;\n      setTimeout(function () {\n        _this2.setState({\n          triggerTransition: !triggerTransition\n        }, function () {\n          document.body.classList.remove(overflowClassname);\n        });\n      }, this.state.transitionTimeout);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps;\n      var _this$state3 = this.state,\n          isNavOpened = _this$state3.isNavOpened,\n          navPosition = _this$state3.navPosition,\n          triggerTransition = _this$state3.triggerTransition,\n          overflowClassname = _this$state3.overflowClassname,\n          menuColor = _this$state3.menuColor;\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Head, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"title\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Hien Portfolio | Software Engineer\")), React.createElement(React.Fragment, null, React.createElement(GlobalStyle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(CssBaseline, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(Transition, {\n        triggerTransition: triggerTransition,\n        overflowClassname: overflowClassname,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(Header, {\n        toggleNav: this.toggleNav,\n        isNavOpened: isNavOpened,\n        navPosition: navPosition,\n        menuColor: menuColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(Component, _extends({}, pageProps, {\n        pageTitle: \"Portfolio\",\n        setMenuColor: this.setMenuColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })), React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/hluong/Desktop/experiment_source/nextjs-portfolio/pages/_app.js"],"names":["React","App","Container","Head","CssBaseline","Transition","Header","Footer","GlobalStyle","MyApp","triggerTransition","isNavOpened","navPosition","overflowClassname","menuColor","transitionTimeout","color","setState","state","document","body","classList","add","remove","jssStyles","querySelector","parentNode","removeChild","setTimeout","props","Component","pageProps","toggleNav","setMenuColor"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,IAAcC,SAAd,QAA+B,UAA/B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,MAAP,MAAmB,kCAAnB;AACA,SAASC,WAAT,QAA4B,sBAA5B;;IAEMC,K;;;;;;;;;;;;;;;;;;4DAEM;AACJC,MAAAA,iBAAiB,EAAE,IADf;AAEJC,MAAAA,WAAW,EAAE,IAFT;AAGJC,MAAAA,WAAW,EAAE,OAHT;AAIJC,MAAAA,iBAAiB,EAAE,YAJf;AAKJC,MAAAA,SAAS,EAAE,QALP;AAMJC,MAAAA,iBAAiB,EAAE;AANf,K;;mEA6BO,UAACC,KAAD,EAAW;AACtB,YAAKC,QAAL,CAAc;AACVH,QAAAA,SAAS,EAAEE;AADD,OAAd;AAGH,K;;gEAEW,YAAM;AAAA,wBAIV,MAAKE,KAJK;AAAA,UAEZP,WAFY,eAEZA,WAFY;AAAA,UAGZE,iBAHY,eAGZA,iBAHY;AAMb,OAACF,WAAF,GACIQ,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4BT,iBAA5B,CADJ,GAEIM,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBE,MAAxB,CAA+BV,iBAA/B,CAFJ;;AAIA,YAAKI,QAAL,CAAc;AACVN,QAAAA,WAAW,EAAE,CAACA;AADJ,OAAd;AAGH,K;;;;;;;wCAvCmB;AAAA;;AAChB,UAAMa,SAAS,GAAGL,QAAQ,CAACM,aAAT,CAAuB,kBAAvB,CAAlB;;AACA,UAAID,SAAJ,EAAe;AACXA,QAAAA,SAAS,CAACE,UAAV,CAAqBC,WAArB,CAAiCH,SAAjC;AACH;;AAJe,yBASZ,KAAKN,KATO;AAAA,UAOZR,iBAPY,gBAOZA,iBAPY;AAAA,UAQZG,iBARY,gBAQZA,iBARY;AAWhBe,MAAAA,UAAU,CAAC,YAAM;AACb,QAAA,MAAI,CAACX,QAAL,CAAc;AACVP,UAAAA,iBAAiB,EAAE,CAACA;AADV,SAAd,EAEG,YAAM;AACLS,UAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBE,MAAxB,CAA+BV,iBAA/B;AACH,SAJD;AAKH,OANS,EAMP,KAAKK,KAAL,CAAWH,iBANJ,CAAV;AAOH;;;6BAuBQ;AAAA,wBAID,KAAKc,KAJJ;AAAA,UAEDC,SAFC,eAEDA,SAFC;AAAA,UAGDC,SAHC,eAGDA,SAHC;AAAA,yBAYD,KAAKb,KAZJ;AAAA,UAODP,WAPC,gBAODA,WAPC;AAAA,UAQDC,WARC,gBAQDA,WARC;AAAA,UASDF,iBATC,gBASDA,iBATC;AAAA,UAUDG,iBAVC,gBAUDA,iBAVC;AAAA,UAWDC,SAXC,gBAWDA,SAXC;AAcL,aACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CADJ,CADJ,EAMI,0CACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAII,oBAAC,UAAD;AAAY,QAAA,iBAAiB,EAAEJ,iBAA/B;AAAkD,QAAA,iBAAiB,EAAEG,iBAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,EAKI,oBAAC,MAAD;AACI,QAAA,SAAS,EAAE,KAAKmB,SADpB;AAEI,QAAA,WAAW,EAAErB,WAFjB;AAGI,QAAA,WAAW,EAAEC,WAHjB;AAII,QAAA,SAAS,EAAEE,SAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,EAWI,oBAAC,SAAD,eACQiB,SADR;AAEI,QAAA,SAAS,EAAC,WAFd;AAGI,QAAA,YAAY,EAAE,KAAKE,YAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAXJ,EAgBI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBJ,CANJ,CADJ;AA2BH;;;;EA7FehC,G;;AAgGpB,eAAeQ,KAAf","sourcesContent":["import React from 'react';\nimport App, { Container } from 'next/app';\nimport Head from 'next/head';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Transition from '../components/transition';\nimport Header from \"../components/layout/header\";\nimport Footer from \"../components/layout/footer.copy\";\nimport { GlobalStyle } from \"../src/global-styles\";\n\nclass MyApp extends App {\n\n    state = {\n        triggerTransition: true,\n        isNavOpened: true,\n        navPosition: \"fixed\",\n        overflowClassname: \"nav-opened\",\n        menuColor: \"action\",\n        transitionTimeout: 200000\n    }\n\n    componentDidMount() {\n        const jssStyles = document.querySelector('#jss-server-side');\n        if (jssStyles) {\n            jssStyles.parentNode.removeChild(jssStyles)\n        }\n\n        let {\n            triggerTransition,\n            overflowClassname\n        } = this.state;\n\n        setTimeout(() => {\n            this.setState({\n                triggerTransition: !triggerTransition\n            }, () => {\n                document.body.classList.remove(overflowClassname)\n            });\n        }, this.state.transitionTimeout)\n    }\n\n    setMenuColor = (color) => {\n        this.setState({\n            menuColor: color\n        })\n    }\n\n    toggleNav = () => {\n        let {\n          isNavOpened,\n          overflowClassname\n        } = this.state;\n\n        (!isNavOpened) ?\n            document.body.classList.add(overflowClassname) :\n            document.body.classList.remove(overflowClassname)\n    \n        this.setState({\n            isNavOpened: !isNavOpened,\n        })\n    }\n\n    render() {\n        let {\n            Component,\n            pageProps\n        } = this.props;\n\n        let {\n            isNavOpened,\n            navPosition,\n            triggerTransition,\n            overflowClassname,\n            menuColor\n        } = this.state;\n\n        return (\n            <Container>\n                <Head>\n                    <title>\n                        Hien Portfolio | Software Engineer\n                    </title>\n                </Head>\n                <>\n                    <GlobalStyle/>\n                    <CssBaseline/>\n    \n                    <Transition triggerTransition={triggerTransition} overflowClassname={overflowClassname}/>\n                    <Header \n                        toggleNav={this.toggleNav} \n                        isNavOpened={isNavOpened} \n                        navPosition={navPosition}\n                        menuColor={menuColor}\n                    />\n                    <Component \n                        {...pageProps} \n                        pageTitle='Portfolio'\n                        setMenuColor={this.setMenuColor}\n                    />\n                    <Footer/>\n                </>\n            </Container>\n        )\n    }\n}\n\nexport default MyApp;"]},"metadata":{},"sourceType":"module"}