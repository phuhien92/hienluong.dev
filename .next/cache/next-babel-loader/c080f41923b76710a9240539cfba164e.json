{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/hluong/Desktop/experiment_source/nextjs-portfolio/components/Weather/index.js\";\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"\\n    height: 40px;\\n    background-image: url(\\\"/static/images/sin.png\\\");\\n    background-position: -115px 0px;\\n    background-size: cover;\\n    width: 100%;\\n    position: relative;\\n    top: 2px;\\n    display: none;\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n    position: absolute;\\n    right: -2em;\\n    top: -2em;\\n    text-align: right;\\n    img {\\n        width: 80px;\\n    }\\n    p {\\n        margin: 0;\\n    }\\n\\n    @media screen and (max-width: \", \"px){\\n        top: -3em;\\n        right: -3em;\\n    }\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n    position: absolute;\\n    left: 15px;\\n    bottom: 30px;\\n    line-height: 30px;\\n    vertical-align: middle;\\n    width: 60px;\\n    display: flex;\\n    border-radius: 3px;\\n    overflow: hidden;\\n    z-index: 2;\\n    span {\\n        width: 50%;\\n        text-align: center;\\n        color: #fff;\\n        font-weight: 700;\\n        text-align: center;\\n        text-shadow: 1px 1px 1px #191b1e;\\n        background-color: #2d3035;\\n        cursor: pointer;\\n        &.active {\\n            background-color: \", \";\\n            cursor: default;\\n        }\\n    }\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n    color: \", \";\\n    font-size: 4em;\\n    font-weight: 700;\\n    display: block;\\n    position: relative;\\n\\n    @media screen and (min-width: \", \"px){\\n        text-align: right;\\n        margin-right: 10px;\\n    }\\n    small {\\n        font-size: 70%;\\n        animation: \", \" 4s linear infinite;\\n        &.degree {\\n            position: absolute;\\n            top: -5px;\\n        }\\n    }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    left: 1em;\\n    position: absolute;\\n    font-size: 1.5em;\\n    color: \", \";\\n    font-weight: 600;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    z-index: 1;\\n    background: #fff;\\n    position: relative;\\n    padding: 15px;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    position: relative;\\n    border-radius: 30px;\\n    box-shadow: 15px 20px 85px #d7c4bd;\\n    overflow: hidden;\\n    background: linear-gradient(141deg,#f9ebe2 30%, #e7c3bb 75%);\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { API } from './../../API';\nimport styled from 'styled-components';\nimport { breakPoints, colorOptions } from '../../src/theme';\nimport WIcon from './WIcon';\nimport { keyframe_flip } from './../../src/KeyFrames';\n\nvar ipLookup =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var res, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return Axios.get(API.IPLOOKUP_API_PATH);\n\n          case 3:\n            res = _context.sent;\n            data = res.data;\n            return _context.abrupt(\"return\", data);\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 8]]);\n  }));\n\n  return function ipLookup() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar Wrapper = styled.div(_templateObject());\nvar Card = styled.div(_templateObject2());\nvar CityText = styled.span(_templateObject3(), colorOptions.gray.PRIMARY_COLOR_BOLD);\nvar TempText = styled.span(_templateObject4(), colorOptions.gray.PRIMARY_COLOR_BOLD, breakPoints.md, keyframe_flip);\nvar TempSwitcher = styled.div(_templateObject5(), colorOptions.blue.PRIMARY_COLOR_BOLD);\nvar WeatherText = styled.div(_templateObject6(), breakPoints.md);\nvar Wave = styled.div(_templateObject7());\nvar WType = {\n  200: \"thunder-storm\",\n  300: \"sun-shower\",\n  500: \"rainy\",\n  600: \"snow\",\n  700: \"mist\",\n  800: \"sunny\",\n  801: \"cloudy\"\n};\n\nvar getCurrentWeather = function getCurrentWeather(query, units) {\n  return Axios.get(\"\".concat(API.WEATHER_API_PATH, \"?appid=\").concat(API.WEATHER_API_ACCESS_KEY, \"&q=\").concat(query, \"&units=\").concat(units));\n};\n\nvar Weather = function Weather(props) {\n  var _useState = useState(-122.33),\n      _useState2 = _slicedToArray(_useState, 2),\n      longitude = _useState2[0],\n      setLongitude = _useState2[1];\n\n  var _useState3 = useState(47.6),\n      _useState4 = _slicedToArray(_useState3, 2),\n      latitude = _useState4[0],\n      setLatitude = _useState4[1];\n\n  var _useState5 = useState(\"Houston\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      city = _useState6[0],\n      setCity = _useState6[1];\n\n  var _useState7 = useState(\"United State\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      country = _useState8[0],\n      setCountry = _useState8[1];\n\n  var _useState9 = useState({}),\n      _useState10 = _slicedToArray(_useState9, 2),\n      weather = _useState10[0],\n      setWeather = _useState10[1];\n\n  var _useState11 = useState('imperial'),\n      _useState12 = _slicedToArray(_useState11, 2),\n      wunit = _useState12[0],\n      setWunit = _useState12[1];\n\n  var _useState13 = useState(0),\n      _useState14 = _slicedToArray(_useState13, 2),\n      wtemp = _useState14[0],\n      setWtemp = _useState14[1];\n\n  var wunit_change = function wunit_change(e) {\n    var el = e.target;\n    var id = el.id;\n\n    if (id !== wunit) {\n      var temp = id === \"metric\" ? (wtemp - 32) / 1.8 : wtemp * 1.8 + 32;\n      setWunit(id);\n      setWtemp(temp);\n    }\n\n    return false;\n  };\n\n  var getWType = function getWType(id) {\n    var type;\n\n    if (id > 800) {\n      type = WType[801];\n    } else if (id === 800) {\n      type = WType[800];\n    } else if (id >= 700 && id < 800) {\n      type = WType[700];\n    } else if (id >= 600 && id < 700) {\n      type = WType[600];\n    } else if (id >= 500 && id < 600) {\n      type = WType[500];\n    } else if (type >= 300 && id < 400) {\n      type = WType[300];\n    } else {\n      type = WType[200];\n    }\n\n    return type;\n  };\n\n  var lookupLoc = function lookupLoc() {\n    ipLookup().then(function (success) {\n      var data = !!success ? _objectSpread({}, success, {\n        longitude: success.lon,\n        latitude: success.lat\n      }) : {\n        latitude: latitude,\n        longitude: longitude,\n        city: city,\n        country: country\n      };\n      setLatitude(data.latitude);\n      setLongitude(data.longitude);\n      setCity(data.city);\n      setCountry(data.country);\n      getCurrentWeather(\"\".concat(city, \",\").concat(country), wunit).then(function (success) {\n        var data = success.data; //console.log(data)\n\n        setWtemp(data.main.temp);\n        setWeather(_objectSpread({}, data.main, {\n          name: data.name,\n          weatherMain: data.weather[0].main,\n          weatherText: data.weather[0].description,\n          icon: \"\".concat(API.WEATHER_API_ICON_PATH, \"/\").concat(data.weather[0].icon, \"@2x.png\"),\n          id: data.weather[0].id\n        }));\n      })[\"catch\"](function (error) {\n        console.error(\"Current Weather Error: \", error);\n      });\n    });\n  };\n\n  useEffect(function () {\n    lookupLoc();\n  }, []);\n  return React.createElement(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, React.createElement(WeatherText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, React.createElement(WIcon, {\n    type: getWType(weather.id),\n    text: weather.weatherText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  })), props.children, React.createElement(Wave, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }), React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, React.createElement(CityText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, city), React.createElement(TempSwitcher, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    id: \"metric\",\n    className: wunit === \"metric\" ? \"active\" : \"\",\n    onClick: wunit_change,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, \"\\xB0C\"), React.createElement(\"span\", {\n    id: \"imperial\",\n    className: wunit === \"imperial\" ? \"active\" : \"\",\n    onClick: wunit_change,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, \"\\xB0F\")), React.createElement(TempText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, Math.round(wtemp), React.createElement(\"small\", {\n    className: \"degree\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, \"o\"))));\n};\n\nexport default Weather;\nWeather.defaultProps = {};","map":{"version":3,"sources":["/Users/hluong/Desktop/experiment_source/nextjs-portfolio/components/Weather/index.js"],"names":["React","useState","useEffect","Axios","API","styled","breakPoints","colorOptions","WIcon","keyframe_flip","ipLookup","get","IPLOOKUP_API_PATH","res","data","console","error","Wrapper","div","Card","CityText","span","gray","PRIMARY_COLOR_BOLD","TempText","md","TempSwitcher","blue","WeatherText","Wave","WType","getCurrentWeather","query","units","WEATHER_API_PATH","WEATHER_API_ACCESS_KEY","Weather","props","longitude","setLongitude","latitude","setLatitude","city","setCity","country","setCountry","weather","setWeather","wunit","setWunit","wtemp","setWtemp","wunit_change","e","el","target","id","temp","getWType","type","lookupLoc","then","success","lon","lat","main","name","weatherMain","weatherText","description","icon","WEATHER_API_ICON_PATH","children","Math","round","defaultProps"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Axios from 'axios';\nimport { API } from './../../API';\nimport styled from 'styled-components';\nimport { breakPoints, colorOptions } from '../../src/theme';\nimport WIcon from './WIcon';\nimport {keyframe_flip} from './../../src/KeyFrames'\nconst ipLookup = async () => {\n    try {\n        const res = await Axios.get(API.IPLOOKUP_API_PATH);\n        const data = res.data;\n\n        return data;\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nconst Wrapper = styled.div`\n    position: relative;\n    border-radius: 30px;\n    box-shadow: 15px 20px 85px #d7c4bd;\n    overflow: hidden;\n    background: linear-gradient(141deg,#f9ebe2 30%, #e7c3bb 75%);\n`;\n\nconst Card = styled.div`\n    z-index: 1;\n    background: #fff;\n    position: relative;\n    padding: 15px;\n`;\n\nconst CityText = styled.span`\n    left: 1em;\n    position: absolute;\n    font-size: 1.5em;\n    color: ${colorOptions.gray.PRIMARY_COLOR_BOLD};\n    font-weight: 600;\n`;\n\nconst TempText = styled.span`\n    color: ${colorOptions.gray.PRIMARY_COLOR_BOLD};\n    font-size: 4em;\n    font-weight: 700;\n    display: block;\n    position: relative;\n\n    @media screen and (min-width: ${breakPoints.md}px){\n        text-align: right;\n        margin-right: 10px;\n    }\n    small {\n        font-size: 70%;\n        animation: ${keyframe_flip} 4s linear infinite;\n        &.degree {\n            position: absolute;\n            top: -5px;\n        }\n    }\n`;\n\nconst TempSwitcher = styled.div`\n    position: absolute;\n    left: 15px;\n    bottom: 30px;\n    line-height: 30px;\n    vertical-align: middle;\n    width: 60px;\n    display: flex;\n    border-radius: 3px;\n    overflow: hidden;\n    z-index: 2;\n    span {\n        width: 50%;\n        text-align: center;\n        color: #fff;\n        font-weight: 700;\n        text-align: center;\n        text-shadow: 1px 1px 1px #191b1e;\n        background-color: #2d3035;\n        cursor: pointer;\n        &.active {\n            background-color: ${colorOptions.blue.PRIMARY_COLOR_BOLD};\n            cursor: default;\n        }\n    }\n`;\n\nconst WeatherText = styled.div`\n    position: absolute;\n    right: -2em;\n    top: -2em;\n    text-align: right;\n    img {\n        width: 80px;\n    }\n    p {\n        margin: 0;\n    }\n\n    @media screen and (max-width: ${breakPoints.md}px){\n        top: -3em;\n        right: -3em;\n    }\n`;\n\nconst Wave = styled.div`\n    height: 40px;\n    background-image: url(\"/static/images/sin.png\");\n    background-position: -115px 0px;\n    background-size: cover;\n    width: 100%;\n    position: relative;\n    top: 2px;\n    display: none;\n`;\n\nconst WType = {\n    200: \"thunder-storm\",\n    300: \"sun-shower\",\n    500: \"rainy\",\n    600: \"snow\",\n    700: \"mist\",\n    800: \"sunny\",\n    801: \"cloudy\"\n}\n\nconst getCurrentWeather = (query, units) => Axios.get(`${API.WEATHER_API_PATH}?appid=${API.WEATHER_API_ACCESS_KEY}&q=${query}&units=${units}`);\n\nconst Weather = (props) => {\n\n    const [longitude, setLongitude] = useState(-122.33);\n    const [latitude, setLatitude]   = useState(47.6);\n    const [city, setCity]           = useState(\"Houston\");\n    const [country, setCountry]     = useState(\"United State\");\n    const [weather, setWeather]     = useState({});\n    const [wunit, setWunit]         = useState('imperial');\n    const [wtemp, setWtemp]         = useState(0);\n\n    const wunit_change = (e) => {\n        let el = e.target;\n        let id = el.id;\n        \n        if (id !== wunit) {\n            let temp = id === \"metric\" ? (wtemp-32)/1.8: wtemp*1.8+32;\n            setWunit(id);\n            setWtemp(temp);\n        }\n\n        return false;\n    }\n\n    const getWType = (id) => {\n        var type;\n\n        if (id > 800) {\n            type = WType[801]\n        } else if (id === 800) {\n            type = WType[800]\n        } else if (id >= 700 && id < 800) {\n            type = WType[700]\n        } else if (id >= 600 && id < 700) {\n            type = WType[600]\n        } else if (id >= 500 && id < 600) {\n            type = WType[500]\n        } else if (type >= 300 && id < 400) {\n            type = WType[300]\n        } else {\n            type = WType[200]\n        }\n\n        return type;\n    }\n\n    const lookupLoc = () => {\n        ipLookup()\n        .then(success => {\n            \n            let data = !!success ? \n            {\n                ...success,\n                longitude: success.lon,\n                latitude: success.lat\n            } :\n            {\n                latitude: latitude,\n                longitude: longitude,\n                city: city,\n                country: country\n            };\n\n            setLatitude(data.latitude);\n            setLongitude(data.longitude);\n            setCity(data.city);\n            setCountry(data.country);\n            getCurrentWeather(`${city},${country}`, wunit)\n            .then(success => {\n                let {data} = success;\n                //console.log(data)\n                setWtemp(data.main.temp);\n                setWeather({\n                    ...data.main,\n                    name: data.name,\n                    weatherMain: data.weather[0].main,\n                    weatherText: data.weather[0].description,\n                    icon: `${API.WEATHER_API_ICON_PATH}/${data.weather[0].icon}@2x.png`,\n                    id: data.weather[0].id\n                })\n            })\n            .catch(error => {\n                console.error(\"Current Weather Error: \", error);\n            })\n        })\n    }\n\n    useEffect(() => {\n        lookupLoc();\n    }, [])\n\n    return (\n        <Wrapper>\n            <WeatherText>\n                <WIcon type={getWType(weather.id)} text={weather.weatherText}></WIcon>\n            </WeatherText>\n            {props.children}\n            <Wave/>\n            <Card>\n                <CityText>{city}</CityText>\n                <TempSwitcher>\n                    <span id=\"metric\" className={wunit === \"metric\"? \"active\":\"\"} onClick={wunit_change}>°C</span>\n                    <span id=\"imperial\" className={wunit === \"imperial\"? \"active\":\"\"} onClick={wunit_change}>°F</span>\n                </TempSwitcher>\n                <TempText>\n                    {Math.round(wtemp)}\n                    <small className=\"degree\">o</small>\n                </TempText>\n                \n            </Card>\n        </Wrapper>\n    )\n}\n\nexport default Weather;\n\nWeather.defaultProps = {\n    \n}"]},"metadata":{},"sourceType":"module"}