{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/hluong/Desktop/experiment_source/nextjs-portfolio/components/ClipboardCaption/index.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport styled from 'styled-components';\nconst Wrapper = styled.div`\n    position: relative;\n`;\nconst ClipboardMessage = styled.div`\n    position: absolute;\n    opacity: 0.5;\n    text-align: left;\n    font-weight: 500;\n    font-size: ${props => `${props.fontSize}px`};\n    width: ${props => `${props.width}px`};\n    opacity: 0;\n    transform: translate(-50%, -50%);\n    left: 50%;\n    bottom: 50%;\n    transition: cubic-bezier(0.19, 1, 0.22, 1) 1s;\n    visibility: hidden;\n    min-width: 300px;\n    &.active {\n        bottom: ${props => `-${props.fontSize * 3}px`};\n        opacity: 1;\n        visibility: visible;\n    }\n`;\nexport default class ClipboardCaption extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      showClipboard: false\n    });\n\n    _defineProperty(this, \"copyText\", () => {\n      this.refs.input.select();\n      document.execCommand(\"copy\", this.showNotice());\n    });\n\n    _defineProperty(this, \"showNotice\", () => {\n      this.setState({\n        showClipboard: true\n      }, () => {\n        setTimeout(() => {\n          this.setState({\n            showClipboard: false\n          });\n        }, this.props.timeout);\n      });\n    });\n  }\n\n  render() {\n    let {\n      message,\n      copytext,\n      buttontext,\n      width,\n      fontSize\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: this.copyText,\n        children: buttontext\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ClipboardMessage, {\n        className: this.state.showClipboard ? \"active\" : \"\",\n        fontSize: fontSize,\n        width: width,\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: \"input\",\n        type: \"text\",\n        defaultValue: copytext,\n        style: {\n          position: 'fixed',\n          top: '-1000px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nClipboardCaption.defaultValue = {\n  message: \"hello there, please enter your message ðŸŽ‰\",\n  copytext: \"\",\n  buttontext: \"clipboard button\",\n  width: \"14\",\n  fontSize: 14\n};","map":{"version":3,"sources":["/Users/hluong/Desktop/experiment_source/nextjs-portfolio/components/ClipboardCaption/index.js"],"names":["React","styled","Wrapper","div","ClipboardMessage","props","fontSize","width","ClipboardCaption","Component","showClipboard","refs","input","select","document","execCommand","showNotice","setState","setTimeout","timeout","render","message","copytext","buttontext","copyText","state","position","top","defaultValue"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,OAAO,GAAGD,MAAM,CAACE,GAAI;AAC3B;AACA,CAFA;AAIA,MAAMC,gBAAgB,GAAGH,MAAM,CAACE,GAAI;AACpC;AACA;AACA;AACA;AACA,iBAAiBE,KAAK,IAAK,GAAEA,KAAK,CAACC,QAAS,IAAI;AAChD,aAAaD,KAAK,IAAK,GAAEA,KAAK,CAACE,KAAM,IAAI;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkBF,KAAK,IAAK,IAAGA,KAAK,CAACC,QAAN,GAAe,CAAE,IAAI;AACpD;AACA;AACA;AACA,CAnBA;AAqBA,eAAe,MAAME,gBAAN,SAA+BR,KAAK,CAACS,SAArC,CAA+C;AAAA;AAAA;;AAAA,mCAElD;AACJC,MAAAA,aAAa,EAAE;AADX,KAFkD;;AAAA,sCAM/C,MAAM;AACb,WAAKC,IAAL,CAAUC,KAAV,CAAgBC,MAAhB;AACAC,MAAAA,QAAQ,CAACC,WAAT,CAAqB,MAArB,EAA6B,KAAKC,UAAL,EAA7B;AACH,KATyD;;AAAA,wCAW7C,MAAM;AAEf,WAAKC,QAAL,CAAc;AACVP,QAAAA,aAAa,EAAE;AADL,OAAd,EAEG,MAAM;AACLQ,QAAAA,UAAU,CAAC,MAAM;AACb,eAAKD,QAAL,CAAc;AAAEP,YAAAA,aAAa,EAAE;AAAjB,WAAd;AACH,SAFS,EAER,KAAKL,KAAL,CAAWc,OAFH,CAAV;AAGH,OAND;AAQH,KArByD;AAAA;;AAuB1DC,EAAAA,MAAM,GAAG;AAEL,QAAI;AACAC,MAAAA,OADA;AAEAC,MAAAA,QAFA;AAGAC,MAAAA,UAHA;AAIAhB,MAAAA,KAJA;AAKAD,MAAAA;AALA,QAMA,KAAKD,KANT;AAQA,wBACI,QAAC,OAAD;AAAA,8BACI;AACI,QAAA,OAAO,EAAE,KAAKmB,QADlB;AAAA,kBAEED;AAFF;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,gBAAD;AAAkB,QAAA,SAAS,EAAE,KAAKE,KAAL,CAAWf,aAAX,GAA2B,QAA3B,GAAoC,EAAjE;AAAqE,QAAA,QAAQ,EAAEJ,QAA/E;AAAyF,QAAA,KAAK,EAAEC,KAAhG;AAAA,kBACKc;AADL;AAAA;AAAA;AAAA;AAAA,cALJ,eAQI;AAAO,QAAA,GAAG,EAAC,OAAX;AAAmB,QAAA,IAAI,EAAC,MAAxB;AAA+B,QAAA,YAAY,EAAEC,QAA7C;AAAuD,QAAA,KAAK,EAAE;AAACI,UAAAA,QAAQ,EAAE,OAAX;AAAoBC,UAAAA,GAAG,EAAE;AAAzB;AAA9D;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH;;AA7CyD;AAgD9DnB,gBAAgB,CAACoB,YAAjB,GAAgC;AAC5BP,EAAAA,OAAO,EAAE,2CADmB;AAE5BC,EAAAA,QAAQ,EAAE,EAFkB;AAG5BC,EAAAA,UAAU,EAAE,kBAHgB;AAI5BhB,EAAAA,KAAK,EAAE,IAJqB;AAK5BD,EAAAA,QAAQ,EAAE;AALkB,CAAhC","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    position: relative;\n`;\n\nconst ClipboardMessage = styled.div`\n    position: absolute;\n    opacity: 0.5;\n    text-align: left;\n    font-weight: 500;\n    font-size: ${props => `${props.fontSize}px`};\n    width: ${props => `${props.width}px`};\n    opacity: 0;\n    transform: translate(-50%, -50%);\n    left: 50%;\n    bottom: 50%;\n    transition: cubic-bezier(0.19, 1, 0.22, 1) 1s;\n    visibility: hidden;\n    min-width: 300px;\n    &.active {\n        bottom: ${props => `-${props.fontSize*3}px`};\n        opacity: 1;\n        visibility: visible;\n    }\n`;\n\nexport default class ClipboardCaption extends React.Component {\n\n    state = {\n        showClipboard: false\n    }\n\n    copyText = () => {\n        this.refs.input.select();\n        document.execCommand(\"copy\", this.showNotice());\n    }\n    \n    showNotice = () => {\n        \n        this.setState({\n            showClipboard: true\n        }, () => {\n            setTimeout(() => {\n                this.setState({ showClipboard: false })\n            },this.props.timeout)\n        })\n        \n    }\n\n    render() {\n\n        let {\n            message,\n            copytext,\n            buttontext,\n            width,\n            fontSize\n        } = this.props;\n\n        return (\n            <Wrapper>\n                <span \n                    onClick={this.copyText}\n                >{buttontext}</span>\n                \n                <ClipboardMessage className={this.state.showClipboard ? \"active\":\"\"} fontSize={fontSize} width={width}>\n                    {message}\n                </ClipboardMessage>\n                <input ref=\"input\" type=\"text\" defaultValue={copytext} style={{position: 'fixed', top: '-1000px'}}></input>\n            </Wrapper>\n        )\n    }\n}\n\nClipboardCaption.defaultValue = {\n    message: \"hello there, please enter your message ðŸŽ‰\",\n    copytext: \"\",\n    buttontext: \"clipboard button\",\n    width: \"14\",\n    fontSize: 14\n}"]},"metadata":{},"sourceType":"module"}