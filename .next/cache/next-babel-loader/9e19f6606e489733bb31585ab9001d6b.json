{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/hluong/Desktop/experiment_source/nextjs-portfolio/components/ClipboardCaption/index.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    position: absolute;\\n    opacity: 0.5;\\n    text-align: left;\\n    font-weight: 500;\\n    font-size: inherit;\\n    opacity: 0;\\n    transform: translate(-24px);\\n    transition: cubic-bezier(0.19, 1, 0.22, 1) 1s;\\n    visibility: hidden;\\n    min-width: 300px;\\n    &.active {\\n        transform: translateY(15px);\\n        opacity: 1;\\n        visibility: visible;\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    position: relative;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nvar Wrapper = styled.div(_templateObject());\nvar ClipboardMessage = styled.div(_templateObject2());\n\nvar ClipboardCaption =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ClipboardCaption, _React$Component);\n\n  function ClipboardCaption() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ClipboardCaption);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ClipboardCaption)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      showClipboard: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"copyText\", function () {\n      _this.refs.input.select();\n\n      document.execCommand(\"copy\", _this.showNotice());\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"showNotice\", function () {\n      _this.setState({\n        showClipboard: true\n      }, function () {\n        setTimeout(function () {\n          _this.setState({\n            showClipboard: false\n          });\n        }, _this.props.timeout);\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(ClipboardCaption, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          message = _this$props.message,\n          copytext = _this$props.copytext,\n          buttontext = _this$props.buttontext;\n      var defaultMessage = \"hello there, please enter your message ðŸŽ‰\";\n      return React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: this.copyText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, buttontext), React.createElement(ClipboardMessage, {\n        className: this.state.showClipboard ? \"active\" : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, message ? message : defaultMessage), React.createElement(\"input\", {\n        ref: \"input\",\n        type: \"text\",\n        defaultValue: copytext,\n        style: {\n          position: 'fixed',\n          top: '-1000px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ClipboardCaption;\n}(React.Component);\n\nexport { ClipboardCaption as default };","map":{"version":3,"sources":["/Users/hluong/Desktop/experiment_source/nextjs-portfolio/components/ClipboardCaption/index.js"],"names":["React","styled","Wrapper","div","ClipboardMessage","ClipboardCaption","showClipboard","refs","input","select","document","execCommand","showNotice","setState","setTimeout","props","timeout","message","copytext","buttontext","defaultMessage","copyText","state","position","top","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,IAAMC,OAAO,GAAGD,MAAM,CAACE,GAAV,mBAAb;AAIA,IAAMC,gBAAgB,GAAGH,MAAM,CAACE,GAAV,oBAAtB;;IAkBqBE,gB;;;;;;;;;;;;;;;;;;4DAET;AACJC,MAAAA,aAAa,EAAE;AADX,K;;+DAIG,YAAM;AACb,YAAKC,IAAL,CAAUC,KAAV,CAAgBC,MAAhB;;AACAC,MAAAA,QAAQ,CAACC,WAAT,CAAqB,MAArB,EAA6B,MAAKC,UAAL,EAA7B;AACH,K;;iEAEY,YAAM;AAEf,YAAKC,QAAL,CAAc;AACVP,QAAAA,aAAa,EAAE;AADL,OAAd,EAEG,YAAM;AACLQ,QAAAA,UAAU,CAAC,YAAM;AACb,gBAAKD,QAAL,CAAc;AAAEP,YAAAA,aAAa,EAAE;AAAjB,WAAd;AACH,SAFS,EAER,MAAKS,KAAL,CAAWC,OAFH,CAAV;AAGH,OAND;AAQH,K;;;;;;;6BAEQ;AAAA,wBAMD,KAAKD,KANJ;AAAA,UAGDE,OAHC,eAGDA,OAHC;AAAA,UAIDC,QAJC,eAIDA,QAJC;AAAA,UAKDC,UALC,eAKDA,UALC;AAQL,UAAIC,cAAc,GAAG,2CAArB;AAEA,aACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,OAAO,EAAE,KAAKC,QADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEEF,UAFF,CADJ,EAKI,oBAAC,gBAAD;AAAkB,QAAA,SAAS,EAAE,KAAKG,KAAL,CAAWhB,aAAX,GAA2B,QAA3B,GAAoC,EAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKW,OAAO,GAAGA,OAAH,GAAaG,cADzB,CALJ,EAQI;AAAO,QAAA,GAAG,EAAC,OAAX;AAAmB,QAAA,IAAI,EAAC,MAAxB;AAA+B,QAAA,YAAY,EAAEF,QAA7C;AAAuD,QAAA,KAAK,EAAE;AAACK,UAAAA,QAAQ,EAAE,OAAX;AAAoBC,UAAAA,GAAG,EAAE;AAAzB,SAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARJ,CADJ;AAYH;;;;EA7CyCxB,KAAK,CAACyB,S;;SAA/BpB,gB","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    position: relative;\n`;\n\nconst ClipboardMessage = styled.div`\n    position: absolute;\n    opacity: 0.5;\n    text-align: left;\n    font-weight: 500;\n    font-size: inherit;\n    opacity: 0;\n    transform: translate(-24px);\n    transition: cubic-bezier(0.19, 1, 0.22, 1) 1s;\n    visibility: hidden;\n    min-width: 300px;\n    &.active {\n        transform: translateY(15px);\n        opacity: 1;\n        visibility: visible;\n    }\n`;\n\nexport default class ClipboardCaption extends React.Component {\n\n    state = {\n        showClipboard: false\n    }\n\n    copyText = () => {\n        this.refs.input.select();\n        document.execCommand(\"copy\", this.showNotice());\n    }\n    \n    showNotice = () => {\n        \n        this.setState({\n            showClipboard: true\n        }, () => {\n            setTimeout(() => {\n                this.setState({ showClipboard: false })\n            },this.props.timeout)\n        })\n        \n    }\n\n    render() {\n\n        let {\n            message,\n            copytext,\n            buttontext\n        } = this.props;\n\n        let defaultMessage = \"hello there, please enter your message ðŸŽ‰\";\n\n        return (\n            <Wrapper>\n                <span \n                    onClick={this.copyText}\n                >{buttontext}</span>\n                \n                <ClipboardMessage className={this.state.showClipboard ? \"active\":\"\"}>\n                    {message ? message : defaultMessage}\n                </ClipboardMessage>\n                <input ref=\"input\" type=\"text\" defaultValue={copytext} style={{position: 'fixed', top: '-1000px'}}></input>\n            </Wrapper>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}