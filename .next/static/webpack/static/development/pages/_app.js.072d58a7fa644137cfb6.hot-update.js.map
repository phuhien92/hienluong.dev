{"version":3,"file":"static/webpack/static/development/pages/_app.js.072d58a7fa644137cfb6.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["import React from 'react';\nimport App, { Container } from 'next/app';\nimport Head from 'next/head';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Transition from '../components/transition';\nimport Header from \"../components/layout/header\";\nimport Footer from \"../components/layout/footer\";\nimport { GlobalStyle } from \"../src/global-styles\";\n\n/*\n    given a DOM image element, searches it for <img > tags and check if all of them \n    has finished loading or not\n    @param: parent node Element\n    @return boolean\n*/\nfunction imagesLoaded(parentNode) {\n    const imgElements = [...parentNode.querySelectorAll('img')];\n    imgElements.forEach((imgElement) => {\n        if (!imgElement.complete) return false;\n    });\n\n    return true;\n}\n\nclass MyApp extends App {\n\n    state = {\n        triggerTransition: true,\n        isNavOpened: false,\n        navPosition: \"fixed\",\n        overflowClassname: \"nav-opened\",\n        menuColor: \"action\",\n        pageTitle: \"Hien Luong\",\n\n        // footer\n        footerTheme: \"light\"\n    }\n\n    componentDidMount() {\n        const jssStyles = document.querySelector('#jss-server-side');\n        if (jssStyles) {\n            jssStyles.parentNode.removeChild(jssStyles)\n        }\n    }\n\n    setMenuColor = (color) => this.setState({menuColor: color});\n\n    setPageTitle = (pageTitle) => this.setState({pageTitle: pageTitle});\n\n    setFooterTheme = (footerTheme) => {\n        this.setState({footerTheme: footerTheme})\n    };\n\n    toggleNav = () => {\n        let {\n          isNavOpened,\n          overflowClassname\n        } = this.state;\n\n        (!isNavOpened) ?\n            document.body.classList.add(overflowClassname) :\n            document.body.classList.remove(overflowClassname)\n    \n        this.setState({\n            isNavOpened: !isNavOpened,\n        })\n    }\n\n    handleImageChange = () => {\n        this.setState({\n            triggerTransition: !imagesLoaded(this.bodyElement)\n        }, () => {\n            document.body.classList.remove(this.state.overflowClassname)\n        });\n    }\n\n    render() {\n        let {\n            Component,\n            pageProps\n        } = this.props;\n\n        let {\n            isNavOpened,\n            navPosition,\n            triggerTransition,\n            overflowClassname,\n            menuColor,\n            pageTitle,\n            footerTheme\n        } = this.state;\n\n        return (\n            <Container>\n                <Head>\n                    <title>\n                        {pageTitle} | Portfolio\n                    </title>\n                </Head>\n                <div ref={element => this.bodyElement = element}>\n                    <GlobalStyle/>\n                    <CssBaseline/>\n    \n                    <Transition triggerTransition={triggerTransition} overflowClassname={overflowClassname}/>\n                    {/* <Header \n                        toggleNav={this.toggleNav} \n                        isNavOpened={isNavOpened} \n                        navPosition={navPosition}\n                        menuColor={menuColor}\n                    /> */}\n                    <Component \n                        {...pageProps} \n                        setMenuColor={this.setMenuColor}\n                        setPageTitle={this.setPageTitle}\n                        setFooterTheme={this.setFooterTheme}\n                        handleImageChange={this.handleImageChange}\n                    />\n                    <Footer theme={footerTheme}/>\n                </div>\n            </Container>\n        )\n    }\n}\n\nexport default MyApp;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;AAMA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AATA;AACA;AAkBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAMA;AACA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;;;;;;AArCA;AACA;AACA;AAAA;AACA;AACA;AACA;;;AAiCA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAjGA;AACA;AAmGA;;;;A","sourceRoot":""}