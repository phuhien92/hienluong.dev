{"version":3,"file":"static/webpack/static/development/pages/_app.js.e108f1669c16a027aba8.hot-update.js","sources":["webpack:///./components/layout/header.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@material-ui/core/Icon';\nimport styled from \"styled-components\";\nimport ClipboardCaption from '../../components/ClipboardCaption';\nimport { colorOptions, base, lightTheme, breakPoints } from '../../src/theme';\nimport HoverEffectText from '../../src/HoverEffectText';\nimport { Tab, Tabs } from '@material-ui/core';\n\nconst StyledAppBar = styled(({ color, ...otherProps }) => (\n  <AppBar {...otherProps} />\n))`\n  && {\n    background: transparent;\n    img {\n        color: #000;\n        width: 40px;\n    }\n  }\n`;\n\n\nconst FlexGrowDiv = styled.nav`\n  flex-grow: 1;\n`;\n\nconst BigMenu = styled.div`\n  position: fixed;\n  width: 100%;\n  height: 0%;\n  background-color: ${lightTheme.SECONDARY_BACKGROUND_COLOR};\n  z-index:1;\n  overflow: hidden;\n  transition: all 0.3s ease-in-out;\n  &.active {\n    height: 100%;\n    padding-top: 10em;\n    ul {\n      li {\n        transform: translateY(0px);\n      }\n    }\n  }\n`;\n\nconst StyledToolbar = styled((props) => (\n  <Toolbar {...props} />\n))`\n  && {        \n      z-index: 2;\n  }\n`;\n\nconst List = styled.ul`\n  color: #fff;\n  list-style: none;\n  padding: 0;\n  li {\n    margin-bottom: 24px;\n    min-height: 36px;\n    > * {\n      &:hover {\n        opacity: 1;\n      }\n    }\n    small {\n      font-size: ${base.FONT_SIZE_SMALL}px;\n      opacity: 0.75;\n      font-weight: bold;\n      position: relative;\n      cursor: pointer;\n      &:before {\n        content: '';\n        position: absolute;\n        bottom: -5px;\n        height: 3px;\n        width: 50%;\n        background: ${colorOptions.red.PRIMARY_COLOR_BOLD};\n      }\n    }\n    span, a {\n      cursor: pointer;\n      display: block;\n      font-size: ${base.FONT_SIZE_EXTRA_LARGE}px;\n      font-weight: ${base.FONT_WEIGHT_BOLD};\n      text-decoration: none;\n      color: #fff;\n      display: inline-block;\n    }\n    h5 {\n      opacity: 0.25;\n      margin-bottom: 40px;\n      line-height: 24px;\n    }\n  }\n`;\n\nconst Header = ({toggleNav, isNavOpened, navPosition, menuColor}) => {\n  \n  const [viewport, setViewport] = useState(0);\n  const [tab, setTab] = useState(0);\n\n  useEffect(() => {\n    let viewportWidth = window.innerWidth;\n\n    setViewport({width: viewportWidth});\n\n    window.addEventListener('resize', () => {\n      setViewport({width: window.innerWidth})\n    })\n  }, [])\n\n  const handleChangeTabIndex = (e,index) => setTab(index);\n\n  return (\n    <StyledAppBar position={navPosition} elevation={0}>\n        <StyledToolbar>\n          <a href=\"/\"><img src=\"../static/images/logo-v3.png\"/></a>\n          <FlexGrowDiv/>\n          <IconButton edge=\"start\" color=\"inherit\" onClick={toggleNav}>\n            {isNavOpened ? \n              <Icon fontSize=\"large\" color={'inherit'}>close</Icon> :\n              <Icon fontSize=\"large\" color={ menuColor || 'action'}>menu</Icon>\n            }\n          </IconButton>\n        </StyledToolbar>\n        <BigMenu className={isNavOpened ? \"active\":\"\"}>\n          <Grid\n            container\n            spacing={3}\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"flex-start\"\n            style={{minHeight: '100vh'}}\n          >\n            <Grid item lg={6} sm={11} xs={11}>\n              { \n                viewport.width <= `${breakPoints.lg}` &&\n                <Tabs\n                  value={tab}\n                  onChange={handleChangeTabIndex}\n                  variant=\"fullWidth\"\n                >\n                  <Tab label=\"Featured Projects\"></Tab>\n                  <Tab label=\"Other Projects\"></Tab>\n                </Tabs>\n              }\n              <Grid item container direction=\"row\" spacing={3}>\n                { ( (viewport.width <= `${breakPoints.lg}` && tab === 0) ||  viewport.width > `${breakPoints.lg}`) &&\n                <Grid item xs={12} sm={12} lg={5}>\n                  <List>\n                    { viewport.width > `${breakPoints.lg}` &&\n                    <li><small>Explore work</small></li>\n                    }\n                    <li>\n                      <a href=\"/work\">\n                        <HoverEffectText>\n                          <h3>Project Title</h3>\n                        </HoverEffectText>\n                        <h5>The tool that does it all.</h5>\n                      </a>\n                    </li>\n                    <li>\n                      <a href=\"/work\">\n                        <HoverEffectText>\n                          <h3>Project Title</h3>\n                        </HoverEffectText>\n                        <h5>The tool that does it all.</h5>\n                      </a>\n                    </li>\n                  </List>\n                </Grid>\n                }\n                { ( (viewport.width <= `${breakPoints.lg}` && tab === 1) ||  viewport.width > `${breakPoints.lg}`) &&\n                <Grid item xs={12} sm={12} lg={6}>\n                  <List>\n                  { viewport.width > `${breakPoints.lg}` && <li></li>}\n                    <li>\n                      <a href=\"/work\">\n                        <HoverEffectText>D&amp;J Corporation Kindergarten</HoverEffectText>\n                      </a>\n                    </li>\n                    <li>\n                      <a href=\"/work\">\n                        <HoverEffectText>Educate Whimsy Games</HoverEffectText>\n                      </a>\n                    </li>\n                    <li>\n                      <a href=\"/work\">\n                        <HoverEffectText>A.S+C.E.N.D</HoverEffectText>\n                      </a>\n                    </li>\n                  </List>\n                </Grid>\n                }\n              </Grid>\n            </Grid>\n            <Grid item md={3} sm={11} xs={11}>\n              <List>\n                <li><small>Learn more</small></li>\n                <li>\n                  <HoverEffectText>\n                    <a href=\"/about\">About</a>\n                  </HoverEffectText>\n                </li>\n                <li>\n                  <HoverEffectText><a href=\"https://medium.com/@phuhien\" target=\"_blank\">Blog</a></HoverEffectText>\n                </li>\n                <li>\n                  <HoverEffectText>\n                    <ClipboardCaption\n                      copytext=\"luongphuhien@gmail.com\"\n                      buttontext=\"Get in Touch\"\n                      message=\"My email has been copied to your clipboard! ðŸŽ‰\"\n                      timeout={2000}\n                    />\n                  </HoverEffectText>\n                </li>\n              </List>\n            </Grid>\n          </Grid>\n        </BigMenu>\n    </StyledAppBar>\n  )\n}\n\nexport default Header;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAaA;AAIA;AAmcA;AACA;AACA;;;;A","sourceRoot":""}